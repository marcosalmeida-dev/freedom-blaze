@inherits LayoutComponentBase

<MudThemeProvider @rendermode="InteractiveServer" @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider @rendermode="InteractiveServer" />
<MudSnackbarProvider @rendermode="InteractiveServer" />
<MudPopoverProvider @rendermode="InteractiveServer" />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Freedom Blaze</MudText>
        <MudSpacer />
        <MudSwitch @bind-Value="@_isDarkMode" UncheckedColor="Color.Primary" Color="Color.Primary" Class="ma-4" T="bool" Label="Toggle Light/Dark Mode" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code {
    //private MudTheme _theme = new();
    MudTheme _theme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = Colors.Orange.Default,
            Secondary = Colors.BlueGray.Darken1,
            AppbarBackground = Colors.Shades.Black,
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Orange.Default
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "300px"
        }
    };
    private bool _isDarkMode;

    bool _drawerOpen = true;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}