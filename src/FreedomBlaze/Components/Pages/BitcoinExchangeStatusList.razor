@using FreedomBlaze.Models
@using MudBlazor

<MudContainer Class="mt-12 d-flex">
    <MudGrid Class="d-flex justify-center">
        <MudItem xs="12" sm="3" md="3" Class="d-flex">
            <MudDataGrid Items="@ExchangeStatusList" ColumnResizeMode="ResizeMode.None" Hover="true" Dense="true">
                <Columns>
                    <PropertyColumn Title="Exchange" Property="x => x.ExchangeName">
                        <CellTemplate>
                            @context.Item.ExchangeName
                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Title="Status" Property="x => x.IsExchangeAvailable">
                        <CellTemplate>
                            <MudIcon Icon="@GetIcon(context.Item.IsExchangeAvailable)"
                                     Color="@GetColor(context.Item.IsExchangeAvailable)" />
                        </CellTemplate>
                    </PropertyColumn>
                </Columns>
            </MudDataGrid>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public List<BitcoinExchangeStatusModel> ExchangeStatusList { get; set; } = new();

    private string GetIcon(bool isAvailable) => isAvailable ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Cancel;

    private Color GetColor(bool isAvailable) => isAvailable ? Color.Success : Color.Error;

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}
